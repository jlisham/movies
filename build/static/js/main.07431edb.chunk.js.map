{"version":3,"sources":["components/Header.jsx","components/Home.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/MovieDetail.jsx","components/App.js","serviceWorker.js","index.js"],"names":["Header","submitHandler","e","preventDefault","props","history","push","refs","searchTf","value","className","to","style","textDecoration","onSubmit","this","name","ref","type","placeholder","Component","withRouter","Home","movie","onClick","imdbID","Title","Year","src","Poster","alt","MovieList","state","movies","fetchMovies","q","queryString","parse","location","search","Axios","get","searchText","then","res","data","Search","setState","prevProps","locaiton","movieList","map","m","index","key","length","MovieDetail","Object","keys","director","Language","Writer","Awards","Genre","Actors","BoxOffice","Released","go","App","path","exact","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.07431edb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { history } = this.props;\r\n    history.push(\"/movies?searchText=\" + this.refs.searchTf.value);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"alert alert-primary\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <h3>\r\n                <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                  Movie Browser\r\n                </Link>\r\n              </h3>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <form onSubmit={this.submitHandler}>\r\n                <input\r\n                  name=\"search\"\r\n                  ref=\"searchTf\"\r\n                  type=\"search\"\r\n                  placeholder=\"search the movie database...\"\r\n                  className=\"form-control\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4 col-xs-12 text-center\"></div>\r\n      <div className=\"col-md-4 col-xs-12\">\r\n        <h3>Movie Browser App</h3>\r\n        <p>Pwrd by Reactjs </p>\r\n      </div>\r\n      <div className=\"col-md-4 col-xs-12\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst MovieCard = ({ movie, history }) => {\r\n  const getMovieDetail = (imdbID) => {\r\n    history.push(\"/details?imdbID=\" + imdbID);\r\n  };\r\n  return (\r\n    <div className=\"col-md-4\">\r\n      <div className=\"card\" onClick={() => getMovieDetail(movie.imdbID)}>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{movie.Title}</h5>\r\n          <p className=\"card-text\">{movie.Year}</p>\r\n        </div>\r\n        <img src={movie.Poster} alt={movie.Title} className=\"card-img-top\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(MovieCard);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nclass MovieList extends Component {\r\n  state = { movies: [] };\r\n  componentDidMount() {\r\n    this.fetchMovies();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.locaiton !== this.props);\r\n    this.fetchMovies();\r\n  }\r\n  fetchMovies = () => {\r\n    let q = queryString.parse(this.props.location.search);\r\n    Axios.get(`https://www.omdbapi.com/?apikey=9c1141fc&s=${q.searchText}`)\r\n      .then((res) => res.data)\r\n      .then((data) => data.Search)\r\n      .then((movies) => (movies ? this.setState({ movies }) : null));\r\n  };\r\n  render() {\r\n    const movieList =\r\n      this.state.movies !== 0\r\n        ? this.state.movies.map((m, index) => (\r\n            <MovieCard movie={m} key={index} />\r\n          ))\r\n        : null;\r\n    return (\r\n      <div className=\"row\">\r\n        {movieList.length > 0 ? (\r\n          <Fragment>{movieList}</Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <em>Your search yielded no results</em>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nclass MovieDetail extends Component {\r\n  state = { movie: {} };\r\n\r\n  componentDidMount() {\r\n    this.fetchMovies();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.locaiton !== this.props);\r\n    this.fetchMovies();\r\n  }\r\n  fetchMovies = () => {\r\n    let q = queryString.parse(this.props.location.search);\r\n    Axios.get(`https://www.omdbapi.com/?apikey=9c1141fc&i=${q.imdbID}`)\r\n      .then((res) => res.data)\r\n      .then((movie) => this.setState({ movie }));\r\n  };\r\n\r\n  render() {\r\n    let { movie } = this.state;\r\n\r\n    let output =\r\n      movie && Object.keys(movie).length > 0 ? (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <img\r\n              src={movie.Poster}\r\n              alt={movie.Title}\r\n              className=\"img img-thumbnail\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <h1>{movie.Title}</h1>\r\n            <table className=\"table\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Director</td>\r\n                  <td>{movie.director}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Year</td>\r\n                  <td>{movie.Year}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Language</td>\r\n                  <td>{movie.Language}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Writer</td>\r\n                  <td>{movie.Writer}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Awards</td>\r\n                  <td>{movie.Awards}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Genre</td>\r\n                  <td>{movie.Genre}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Actors</td>\r\n                  <td>{movie.Actors}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Box Office</td>\r\n                  <td>{movie.BoxOffice}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Released</td>\r\n                  <td>{movie.Released}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <button\r\n              className=\"btn-primary\"\r\n              onClick={() => this.props.history.go(-1)}\r\n            >\r\n              Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          <img src=\"/images/loading.gif\" alt=\"loading...\" />\r\n        </div>\r\n      );\r\n    return output;\r\n  }\r\n}\r\n\r\nexport default MovieDetail;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport MovieList from \"./MovieList\";\nimport MovieDetail from \"./MovieDetail\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Header />\n          <div className=\"container\">\n            <Route path=\"/\" exact={true} component={Home} />{\" \"}\n            <Route path=\"/movies\" component={MovieList} />{\" \"}\n            <Route path=\"/details\" component={MovieDetail} />{\" \"}\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}